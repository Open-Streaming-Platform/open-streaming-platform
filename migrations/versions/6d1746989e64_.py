"""empty message

Revision ID: 6d1746989e64
Revises:
Create Date: 2022-05-22 15:50:54.437988

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "6d1746989e64"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Guest",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("UUID", sa.String(length=255), nullable=True),
        sa.Column("last_active_at", sa.DateTime(), nullable=True),
        sa.Column("last_active_ip", sa.String(length=100), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "channel_ban_list",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("channelLoc", sa.String(length=255), nullable=True),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("userUUID", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "chat_banned_messages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("msgID", sa.String(length=64), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("channelLoc", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "chat_banned_words",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("word", sa.String(length=1028), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "db_version",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("version", sa.Float(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "edge_streamer",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("address", sa.String(length=1024), nullable=True),
        sa.Column("port", sa.Integer(), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("status", sa.Integer(), nullable=True),
        sa.Column("loadPct", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "global_panel",
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("type", sa.Integer(), nullable=True),
        sa.Column("header", sa.String(length=1024), nullable=True),
        sa.Column("order", sa.Integer(), nullable=True),
        sa.Column("target", sa.Integer(), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "global_webhook",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("endpointURL", sa.String(length=2048), nullable=True),
        sa.Column("requestHeader", sa.String(length=4096), nullable=True),
        sa.Column("requestPayload", sa.String(length=4096), nullable=True),
        sa.Column("requestType", sa.Integer(), nullable=True),
        sa.Column("requestTrigger", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "hub",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("hubUUID", sa.String(length=255), nullable=True),
        sa.Column("hubToken", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ip_list",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("ipAddress", sa.String(length=1024), nullable=True),
        sa.Column("reason", sa.String(length=1024), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "logs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("message", sa.String(length=1024), nullable=True),
        sa.Column("type", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "o_auth_provider",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=40), nullable=True),
        sa.Column("friendlyName", sa.String(length=64), nullable=True),
        sa.Column("preset_auth_type", sa.String(length=64), nullable=True),
        sa.Column("displayColor", sa.String(length=8), nullable=True),
        sa.Column("client_id", sa.String(length=256), nullable=True),
        sa.Column("client_secret", sa.String(length=256), nullable=True),
        sa.Column("access_token_url", sa.String(length=1024), nullable=True),
        sa.Column("access_token_params", sa.String(length=1024), nullable=True),
        sa.Column("authorize_url", sa.String(length=1024), nullable=True),
        sa.Column("authorize_params", sa.String(length=1024), nullable=True),
        sa.Column("api_base_url", sa.String(length=1024), nullable=True),
        sa.Column("client_kwargs", sa.String(length=2056), nullable=True),
        sa.Column("profile_endpoint", sa.String(length=2056), nullable=True),
        sa.Column("id_value", sa.String(length=256), nullable=True),
        sa.Column("username_value", sa.String(length=256), nullable=True),
        sa.Column("email_value", sa.String(length=256), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "panel_mapping",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("pageName", sa.String(length=255), nullable=True),
        sa.Column("panelType", sa.Integer(), nullable=True),
        sa.Column("panelId", sa.Integer(), nullable=True),
        sa.Column("panelOrder", sa.Integer(), nullable=True),
        sa.Column("panelLocationId", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "role",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=80), nullable=True),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("default", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "rtmpServer",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("address", sa.String(length=1024), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("hide", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "settings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("siteName", sa.String(length=255), nullable=True),
        sa.Column("siteProtocol", sa.String(length=24), nullable=True),
        sa.Column("siteAddress", sa.String(length=255), nullable=True),
        sa.Column("serverTimeZone", sa.String(length=255), nullable=True),
        sa.Column("allowRecording", sa.Boolean(), nullable=True),
        sa.Column("allowUploads", sa.Boolean(), nullable=True),
        sa.Column("allowRestream", sa.Boolean(), nullable=True),
        sa.Column("protectionEnabled", sa.Boolean(), nullable=True),
        sa.Column("adaptiveStreaming", sa.Boolean(), nullable=True),
        sa.Column("showEmptyTables", sa.Boolean(), nullable=True),
        sa.Column("allowComments", sa.Boolean(), nullable=True),
        sa.Column("systemTheme", sa.String(length=255), nullable=True),
        sa.Column("systemLogo", sa.String(length=255), nullable=True),
        sa.Column("version", sa.String(length=255), nullable=True),
        sa.Column("sortMainBy", sa.Integer(), nullable=True),
        sa.Column("restreamMaxBitrate", sa.Integer(), nullable=True),
        sa.Column("serverMessageTitle", sa.String(length=256), nullable=True),
        sa.Column("serverMessage", sa.String(length=8192), nullable=True),
        sa.Column("maxClipLength", sa.Integer(), nullable=True),
        sa.Column("limitMaxChannels", sa.Integer(), nullable=True),
        sa.Column("proxyFQDN", sa.String(length=2048), nullable=True),
        sa.Column("maintenanceMode", sa.Boolean(), nullable=True),
        sa.Column("buildEdgeOnRestart", sa.Boolean(), nullable=True),
        sa.Column("hubUUID", sa.String(length=255), nullable=True),
        sa.Column("hubEnabled", sa.Boolean(), nullable=True),
        sa.Column("hubURL", sa.String(length=255), nullable=True),
        sa.Column("maxVideoRetention", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "static_page",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=256), nullable=True),
        sa.Column("title", sa.String(length=256), nullable=True),
        sa.Column("iconClass", sa.String(length=256), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("isTopBar", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "streamHistory",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("streamUUID", sa.String(length=255), nullable=True),
        sa.Column("streamerID", sa.Integer(), nullable=True),
        sa.Column("streamerName", sa.String(length=255), nullable=True),
        sa.Column("channelID", sa.Integer(), nullable=True),
        sa.Column("channelName", sa.String(length=255), nullable=True),
        sa.Column("streamName", sa.String(length=255), nullable=True),
        sa.Column("startTime", sa.DateTime(), nullable=True),
        sa.Column("endTime", sa.DateTime(), nullable=True),
        sa.Column("length", sa.Integer(), nullable=True),
        sa.Column("viewers", sa.Integer(), nullable=True),
        sa.Column("upvotes", sa.Integer(), nullable=True),
        sa.Column("recorded", sa.Boolean(), nullable=True),
        sa.Column("recordedVideoID", sa.Integer(), nullable=True),
        sa.Column("topicID", sa.Integer(), nullable=True),
        sa.Column("topicName", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "topics",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("iconClass", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=255), nullable=True),
        sa.Column("username", sa.String(length=255), nullable=True),
        sa.Column("email", sa.String(length=255), nullable=True),
        sa.Column("fs_uniquifier", sa.String(length=255), nullable=True),
        sa.Column("tf_primary_method", sa.String(length=140), nullable=True),
        sa.Column("tf_totp_secret", sa.String(length=255), nullable=True),
        sa.Column("password", sa.String(length=255), nullable=True),
        sa.Column("biography", sa.String(length=4096), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("confirmed_at", sa.DateTime(), nullable=True),
        sa.Column("last_login_at", sa.DateTime(), nullable=True),
        sa.Column("current_login_at", sa.DateTime(), nullable=True),
        sa.Column("last_login_ip", sa.String(length=100), nullable=True),
        sa.Column("current_login_ip", sa.String(length=100), nullable=True),
        sa.Column("login_count", sa.Integer(), nullable=True),
        sa.Column("pictureLocation", sa.String(length=255), nullable=True),
        sa.Column("authType", sa.Integer(), nullable=True),
        sa.Column("oAuthID", sa.String(length=2048), nullable=True),
        sa.Column("oAuthProvider", sa.String(length=40), nullable=True),
        sa.Column("xmppToken", sa.String(length=64), nullable=True),
        sa.Column("emailVideo", sa.Boolean(), nullable=True),
        sa.Column("emailStream", sa.Boolean(), nullable=True),
        sa.Column("emailMessage", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "user_panel",
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("type", sa.Integer(), nullable=True),
        sa.Column("header", sa.String(length=1024), nullable=True),
        sa.Column("order", sa.Integer(), nullable=True),
        sa.Column("target", sa.Integer(), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userId", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "views",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("viewType", sa.Integer(), nullable=True),
        sa.Column("itemID", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Channel",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owningUser", sa.Integer(), nullable=True),
        sa.Column("streamKey", sa.String(length=255), nullable=True),
        sa.Column("channelName", sa.String(length=255), nullable=True),
        sa.Column("channelLoc", sa.String(length=255), nullable=True),
        sa.Column("topic", sa.Integer(), nullable=True),
        sa.Column("views", sa.Integer(), nullable=True),
        sa.Column("currentViewers", sa.Integer(), nullable=True),
        sa.Column("record", sa.Boolean(), nullable=True),
        sa.Column("chatEnabled", sa.Boolean(), nullable=True),
        sa.Column("chatBG", sa.String(length=255), nullable=True),
        sa.Column("chatTextColor", sa.String(length=10), nullable=True),
        sa.Column("chatAnimation", sa.String(length=255), nullable=True),
        sa.Column("imageLocation", sa.String(length=255), nullable=True),
        sa.Column("offlineImageLocation", sa.String(length=255), nullable=True),
        sa.Column("description", sa.String(length=4096), nullable=True),
        sa.Column("allowComments", sa.Boolean(), nullable=True),
        sa.Column("protected", sa.Boolean(), nullable=True),
        sa.Column("channelMuted", sa.Boolean(), nullable=True),
        sa.Column("private", sa.Boolean(), nullable=True),
        sa.Column("showChatJoinLeaveNotification", sa.Boolean(), nullable=True),
        sa.Column("defaultStreamName", sa.String(length=255), nullable=True),
        sa.Column("autoPublish", sa.Boolean(), nullable=True),
        sa.Column("rtmpRestream", sa.Boolean(), nullable=True),
        sa.Column("rtmpRestreamDestination", sa.String(length=4096), nullable=True),
        sa.Column("xmppToken", sa.String(length=64), nullable=True),
        sa.Column("vanityURL", sa.String(length=1024), nullable=True),
        sa.Column("allowGuestNickChange", sa.Boolean(), nullable=True),
        sa.Column("showHome", sa.Boolean(), nullable=True),
        sa.Column("maxVideoRetention", sa.Integer(), nullable=True),
        sa.Column("chatFormat", sa.String(length=16), nullable=True),
        sa.Column("chatHistory", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owningUser"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("channelLoc"),
        sa.UniqueConstraint("streamKey"),
    )
    op.create_table(
        "OAuth2Token",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=40), nullable=True),
        sa.Column("token_type", sa.String(length=40), nullable=True),
        sa.Column("access_token", sa.String(length=2048), nullable=True),
        sa.Column("refresh_token", sa.String(length=2048), nullable=True),
        sa.Column("expires_at", sa.Integer(), nullable=True),
        sa.Column("user", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "UserSocial",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("socialType", sa.String(length=128), nullable=True),
        sa.Column("url", sa.String(length=512), nullable=True),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "UsersFlaggedForDeletion",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "apikey",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("key", sa.String(length=255), nullable=True),
        sa.Column("type", sa.Integer(), nullable=True),
        sa.Column("createdOn", sa.DateTime(), nullable=True),
        sa.Column("expiration", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ban_list",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("channelLoc", sa.String(length=255), nullable=True),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "messageBanList",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("messageFrom", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "roles_users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("role_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["role.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "userMessage",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("messageID", sa.String(length=255), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("subject", sa.String(length=1024), nullable=True),
        sa.Column("message", sa.String(length=10240), nullable=True),
        sa.Column("fromUserID", sa.Integer(), nullable=True),
        sa.Column("toUserID", sa.Integer(), nullable=True),
        sa.Column("read", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["toUserID"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("messageID"),
    )
    op.create_table(
        "userNotification",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("notificationID", sa.String(length=255), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("message", sa.String(length=1024), nullable=True),
        sa.Column("link", sa.String(length=1024), nullable=True),
        sa.Column("image", sa.String(length=256), nullable=True),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("read", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("notificationID"),
    )
    op.create_table(
        "RecordedVideo",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=255), nullable=True),
        sa.Column("videoDate", sa.DateTime(), nullable=True),
        sa.Column("owningUser", sa.Integer(), nullable=True),
        sa.Column("channelName", sa.String(length=255), nullable=True),
        sa.Column("channelID", sa.Integer(), nullable=True),
        sa.Column("description", sa.String(length=4096), nullable=True),
        sa.Column("topic", sa.Integer(), nullable=True),
        sa.Column("views", sa.Integer(), nullable=True),
        sa.Column("length", sa.Float(), nullable=True),
        sa.Column("videoLocation", sa.String(length=255), nullable=True),
        sa.Column("thumbnailLocation", sa.String(length=255), nullable=True),
        sa.Column("gifLocation", sa.String(length=255), nullable=True),
        sa.Column("pending", sa.Boolean(), nullable=True),
        sa.Column("allowComments", sa.Boolean(), nullable=True),
        sa.Column("published", sa.Boolean(), nullable=True),
        sa.Column("originalStreamID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["channelID"],
            ["Channel.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owningUser"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Stream",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=255), nullable=True),
        sa.Column("startTimestamp", sa.DateTime(), nullable=True),
        sa.Column("endTimeStamp", sa.DateTime(), nullable=True),
        sa.Column("linkedChannel", sa.Integer(), nullable=True),
        sa.Column("streamKey", sa.String(length=255), nullable=True),
        sa.Column("streamName", sa.String(length=255), nullable=True),
        sa.Column("topic", sa.Integer(), nullable=True),
        sa.Column("currentViewers", sa.Integer(), nullable=True),
        sa.Column("totalViewers", sa.Integer(), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("pending", sa.Boolean(), nullable=True),
        sa.Column("complete", sa.Boolean(), nullable=True),
        sa.Column("recordedVideoId", sa.Integer(), nullable=True),
        sa.Column("rtmpServer", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["linkedChannel"],
            ["Channel.id"],
        ),
        sa.ForeignKeyConstraint(
            ["rtmpServer"],
            ["rtmpServer.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "channelPanel",
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("type", sa.Integer(), nullable=True),
        sa.Column("header", sa.String(length=1024), nullable=True),
        sa.Column("order", sa.Integer(), nullable=True),
        sa.Column("target", sa.Integer(), nullable=True),
        sa.Column("content", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("channelId", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["channelId"],
            ["Channel.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "channel_subs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("channelID", sa.Integer(), nullable=True),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["channelID"],
            ["Channel.id"],
        ),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "channel_tags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("channelID", sa.Integer(), nullable=True),
        sa.Column("taggedByUser", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["channelID"],
            ["Channel.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "channel_upvotes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("channelID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["channelID"],
            ["Channel.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "inviteCode",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("code", sa.String(length=255), nullable=True),
        sa.Column("expiration", sa.DateTime(), nullable=True),
        sa.Column("channelID", sa.Integer(), nullable=True),
        sa.Column("uses", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["channelID"],
            ["Channel.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_table(
        "restreamDestinations",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("channel", sa.Integer(), nullable=True),
        sa.Column("enabled", sa.Boolean(), nullable=True),
        sa.Column("url", sa.String(length=4096), nullable=True),
        sa.ForeignKeyConstraint(
            ["channel"],
            ["Channel.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "stickers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("channelID", sa.Integer(), nullable=True),
        sa.Column("filename", sa.String(length=1024), nullable=True),
        sa.ForeignKeyConstraint(
            ["channelID"],
            ["Channel.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "webhook",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("channelID", sa.Integer(), nullable=True),
        sa.Column("endpointURL", sa.String(length=2048), nullable=True),
        sa.Column("requestHeader", sa.String(length=4096), nullable=True),
        sa.Column("requestPayload", sa.String(length=4096), nullable=True),
        sa.Column("requestType", sa.Integer(), nullable=True),
        sa.Column("requestTrigger", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["channelID"],
            ["Channel.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "Clips",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", sa.String(length=255), nullable=True),
        sa.Column("parentVideo", sa.Integer(), nullable=True),
        sa.Column("startTime", sa.Float(), nullable=True),
        sa.Column("endTime", sa.Float(), nullable=True),
        sa.Column("length", sa.Float(), nullable=True),
        sa.Column("views", sa.Integer(), nullable=True),
        sa.Column("clipName", sa.String(length=255), nullable=True),
        sa.Column("videoLocation", sa.String(length=255), nullable=True),
        sa.Column("description", sa.String(length=2048), nullable=True),
        sa.Column("thumbnailLocation", sa.String(length=255), nullable=True),
        sa.Column("gifLocation", sa.String(length=255), nullable=True),
        sa.Column("published", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parentVideo"],
            ["RecordedVideo.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "invitedViewer",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("channelID", sa.Integer(), nullable=True),
        sa.Column("addedDate", sa.DateTime(), nullable=True),
        sa.Column("expiration", sa.DateTime(), nullable=True),
        sa.Column("inviteCode", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["channelID"],
            ["Channel.id"],
        ),
        sa.ForeignKeyConstraint(
            ["inviteCode"],
            ["inviteCode.id"],
        ),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "stream_upvotes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("streamID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["streamID"],
            ["Stream.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "videoComments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("comment", sa.String(length=2048), nullable=True),
        sa.Column("videoID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["userID"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["videoID"],
            ["RecordedVideo.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "video_tags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("videoID", sa.Integer(), nullable=True),
        sa.Column("taggedByUser", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["videoID"],
            ["RecordedVideo.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "video_upvotes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("videoID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["videoID"],
            ["RecordedVideo.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "clip_tags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=True),
        sa.Column("clipID", sa.Integer(), nullable=True),
        sa.Column("taggedByUser", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["clipID"],
            ["Clips.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "clip_upvotes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("clipID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["clipID"],
            ["Clips.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "comment_upvotes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("userID", sa.Integer(), nullable=True),
        sa.Column("commentID", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["commentID"],
            ["videoComments.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("comment_upvotes")
    op.drop_table("clip_upvotes")
    op.drop_table("clip_tags")
    op.drop_table("video_upvotes")
    op.drop_table("video_tags")
    op.drop_table("videoComments")
    op.drop_table("stream_upvotes")
    op.drop_table("invitedViewer")
    op.drop_table("Clips")
    op.drop_table("webhook")
    op.drop_table("stickers")
    op.drop_table("restreamDestinations")
    op.drop_table("inviteCode")
    op.drop_table("channel_upvotes")
    op.drop_table("channel_tags")
    op.drop_table("channel_subs")
    op.drop_table("channelPanel")
    op.drop_table("Stream")
    op.drop_table("RecordedVideo")
    op.drop_table("userNotification")
    op.drop_table("userMessage")
    op.drop_table("roles_users")
    op.drop_table("messageBanList")
    op.drop_table("ban_list")
    op.drop_table("apikey")
    op.drop_table("UsersFlaggedForDeletion")
    op.drop_table("UserSocial")
    op.drop_table("OAuth2Token")
    op.drop_table("Channel")
    op.drop_table("views")
    op.drop_table("user_panel")
    op.drop_table("user")
    op.drop_table("topics")
    op.drop_table("streamHistory")
    op.drop_table("static_page")
    op.drop_table("settings")
    op.drop_table("rtmpServer")
    op.drop_table("role")
    op.drop_table("panel_mapping")
    op.drop_table("o_auth_provider")
    op.drop_table("logs")
    op.drop_table("ip_list")
    op.drop_table("hub")
    op.drop_table("global_webhook")
    op.drop_table("global_panel")
    op.drop_table("edge_streamer")
    op.drop_table("db_version")
    op.drop_table("chat_banned_words")
    op.drop_table("chat_banned_messages")
    op.drop_table("channel_ban_list")
    op.drop_table("Guest")
    # ### end Alembic commands ###
